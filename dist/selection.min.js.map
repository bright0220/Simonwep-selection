{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/selection.js","webpack:///./src/utils.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","abs","Math","max","min","round","doc","document","preventDefault","e","Selection","options","arguments","length","undefined","that","assign","class","startThreshold","singleClick","disableTouch","validateStart","containers","selectables","scrollSpeedDivider","startareas","boundaries","_selectedStore","_areaElement","createElement","_clippingElement","_scrollAvailable","_scrollSpeed","_scrollActive","_init","appendChild","body","_","css","top","left","position","overflow","transform","pointer-events","enable","_bindStartEvents","type","_onTapStart","passive","evt","_$simplifyEvent","simplifyEvent","x","y","target","targetBoundingClientRect","getBoundingClientRect","startAreas","selectAll","_boundaries","evtpath","eventPath","find","el","includes","_areaX1","_areaY1","_areaX2","_areaY2","_singleClick","_selectables","forEach","con","push","querySelectorAll","_targetContainer","intersects","_targetBoundary","_touchedElements","_changedElements","added","removed","scrollHeight","height","on","_manualScroll","filter","contains","width","margin-top","margin-left","classList","add","_delayedTapMove","_onTapStop","_onSingleTap","_$simplifyEvent2","parentElement","_dispatchEvent","_$simplifyEvent3","off","_onTapMove","_$simplifyEvent4","scon","requestAnimationFrame","scroll","initial","scrollTop","ceil","_redrawArea","_updatedTouchingElements","wheelDelta","brect","x3","y3","x4","y4","noevent","node","touched","changed","areaRect","_dispatchFilterEvent","eventName","element","event","selection","originalEvent","additional","_objectSpread","areaElement","selectedElements","concat","changedElements","keepSelection","clearSelection","removeFromSelection","removeElement","getSelection","cancel","keepEvent","option","disable","destroy","removeChild","utils","version","eventListener","method","elements","events","fn","HTMLCollection","NodeList","Array","from","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","capture","err","return","slice","attr","val","style","prop","unitify","dw","defaultView","getComputedStyle","currentStyle","a","b","bxc","byc","right","bottom","selector","nodes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","sel","path","composedPath","arr","index","indexOf","splice","tap","touches","clientX","clientY","unit"],"mappings":"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","file":"selection.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selection\"] = factory();\n\telse\n\t\troot[\"Selection\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Selection, library to realize visual DOM-Selection like on your Desktop.\r\n *\r\n * @author  Simon Reinisch\r\n * @license MIT\r\n */\r\n\r\n// Import utils\r\nimport * as _ from './utils';\r\n\r\n// Some var shorting for better compression and readability\r\nconst {abs, max, min, round} = Math;\r\nconst doc = document;\r\nconst preventDefault = e => e.preventDefault();\r\n\r\nfunction Selection(options = {}) {\r\n\r\n    const that = {\r\n\r\n        options: Object.assign({\r\n            class: 'selection-area',\r\n\r\n            mode: 'touch',\r\n            startThreshold: 10,\r\n            singleClick: true,\r\n            disableTouch: false,\r\n\r\n            validateStart: () => true,\r\n\r\n            containers: [],\r\n            selectables: [],\r\n\r\n            scrollSpeedDivider: 10,\r\n\r\n            startareas: ['html'],\r\n            boundaries: ['html']\r\n        }, options),\r\n\r\n        // Store for keepSelection\r\n        _selectedStore: [],\r\n\r\n        // Create area element\r\n        _areaElement: doc.createElement('div'),\r\n        _clippingElement: doc.createElement('div'),\r\n\r\n        // Is getting set on movement. Varied.\r\n        _scrollAvailable: true,\r\n        _scrollSpeed: null,\r\n        _scrollActive: false,\r\n\r\n        _init() {\r\n\r\n            // Append area to body\r\n            that._clippingElement.appendChild(that._areaElement);\r\n            doc.body.appendChild(that._clippingElement);\r\n\r\n            // Apply basic styles to the area element\r\n            _.css(that._areaElement, {\r\n                top: 0,\r\n                left: 0,\r\n                position: 'fixed'\r\n            });\r\n\r\n            _.css(that._clippingElement, {\r\n                overflow: 'hidden',\r\n                position: 'fixed',\r\n                transform: 'translate3d(0, 0, 0)', // https://stackoverflow.com/a/38268846\r\n                'pointer-events': 'none'\r\n            });\r\n\r\n            that.enable();\r\n        },\r\n\r\n        _bindStartEvents(type) {\r\n            _[type](doc, 'mousedown', that._onTapStart);\r\n\r\n            if (!that.options.disableTouch) {\r\n                _[type](doc, 'touchstart', that._onTapStart, {\r\n                    passive: false\r\n                });\r\n            }\r\n        },\r\n\r\n        _onTapStart(evt) {\r\n            const {x, y, target} = _.simplifyEvent(evt);\r\n            const targetBoundingClientRect = target.getBoundingClientRect();\r\n\r\n            // Check mouse middleware\r\n            if (!that.options.validateStart(evt)) {\r\n                return;\r\n            }\r\n\r\n            // Find start-areas and boundaries\r\n            const startAreas = _.selectAll(that.options.startareas);\r\n            that._boundaries = _.selectAll(that.options.boundaries);\r\n\r\n            // Check if area starts in one of the start areas / boundaries\r\n            const evtpath = _.eventPath(evt);\r\n            if (!startAreas.find(el => evtpath.includes(el)) ||\r\n                !that._boundaries.find(el => evtpath.includes(el))) {\r\n                return;\r\n            }\r\n\r\n            // Area start point\r\n            that._areaX1 = x;\r\n            that._areaY1 = y;\r\n\r\n            // Area end point\r\n            that._areaX2 = 0;\r\n            that._areaY2 = 0;\r\n\r\n            that._singleClick = true; // To detect single-click\r\n\r\n            // Resolve selectors\r\n            const containers = _.selectAll(that.options.containers);\r\n            that._selectables = _.selectAll(that.options.selectables);\r\n            containers.forEach(con => that._selectables.push(...con.querySelectorAll('*')));\r\n\r\n            // Check in which container the user currently acts\r\n            that._targetContainer = that._boundaries.find(el =>\r\n                _.intersects(el.getBoundingClientRect(), targetBoundingClientRect)\r\n            );\r\n\r\n            // Just saving the boundaries of this container for later\r\n            that._targetBoundary = that._targetContainer.getBoundingClientRect();\r\n            that._touchedElements = [];\r\n            that._changedElements = {\r\n                added: [],\r\n                removed: []\r\n            };\r\n\r\n            // Find container and check if it's scrollable\r\n            if (round(that._targetContainer.scrollHeight) !== round(that._targetBoundary.height)) {\r\n\r\n                // Indenticates if the user is currently in a scrollable area\r\n                that._scrollAvailable = true;\r\n\r\n                // Detect mouse scrolling\r\n                _.on(window, 'wheel', that._manualScroll);\r\n\r\n                /**\r\n                 * The selection-area will also cover other element which are\r\n                 * out of the current scrollable parent. So find all elements\r\n                 * which are in the current scrollable element. Later these are\r\n                 * the only selectables instead of all.\r\n                 */\r\n                that._selectables = that._selectables.filter(s => that._targetContainer.contains(s));\r\n\r\n                /**\r\n                 * To clip the area, the selection area has a parent\r\n                 * which has exact the same dimensions as the scrollable elemeent.\r\n                 * Now if the area exeeds these boundaries it will be cropped.\r\n                 */\r\n                _.css(that._clippingElement, {\r\n                    top: that._targetBoundary.top,\r\n                    left: that._targetBoundary.left,\r\n                    width: that._targetBoundary.width,\r\n                    height: that._targetBoundary.height\r\n                });\r\n\r\n                /**\r\n                 * The area element is relative to the clipping element,\r\n                 * but when this is moved or transformed we need to correct\r\n                 * the positions via a negative margin.\r\n                 */\r\n                _.css(that._areaElement, {\r\n                    'margin-top': -that._targetBoundary.top,\r\n                    'margin-left': -that._targetBoundary.left\r\n                });\r\n            } else {\r\n                that._scrollAvailable = false;\r\n\r\n                /**\r\n                 * Reset margin and clipping element dimensions.\r\n                 */\r\n                _.css(that._clippingElement, {\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%'\r\n                });\r\n\r\n                _.css(that._areaElement, {\r\n                    'margin-top': 0,\r\n                    'margin-left': 0\r\n                });\r\n            }\r\n\r\n            // Add class to the area element\r\n            that._areaElement.classList.add(that.options.class);\r\n\r\n            // Prevent default select event\r\n            _.on(doc, 'selectstart', preventDefault);\r\n\r\n            // Add listener\r\n            _.on(doc, 'mousemove', that._delayedTapMove);\r\n            _.on(doc, 'touchmove', that._delayedTapMove, {\r\n                passive: false\r\n            });\r\n\r\n            _.on(doc, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\r\n            evt.preventDefault();\r\n        },\r\n\r\n        _onSingleTap(evt) {\r\n            let {target} = _.simplifyEvent(evt);\r\n\r\n            // Traferse dom upwards to check if target is selectable\r\n            while (!that._selectables.includes(target)) {\r\n                if (target.parentElement) {\r\n                    target = target.parentElement;\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            that._touchedElements.push(target);\r\n            that._dispatchEvent('onSelect', evt, {\r\n                target\r\n            });\r\n        },\r\n\r\n        _delayedTapMove(evt) {\r\n            const {x, y} = _.simplifyEvent(evt);\r\n\r\n            // Check pixel threshold\r\n            if (abs((x + y) - (that._areaX1 + that._areaY1)) >= that.options.startThreshold) {\r\n\r\n                _.off(doc, ['mousemove', 'touchmove'], that._delayedTapMove);\r\n                _.on(doc, ['mousemove', 'touchmove'], that._onTapMove);\r\n                _.css(that._areaElement, 'display', 'block');\r\n\r\n                // New start position\r\n                that._onTapMove(evt);\r\n\r\n                // Fire event\r\n                that._dispatchEvent('onStart', evt);\r\n\r\n                // An action is recognized as single-select until\r\n                // the user performed a mutli-selection\r\n                that._singleClick = false;\r\n            }\r\n        },\r\n\r\n        _onTapMove(evt) {\r\n            const {x, y} = _.simplifyEvent(evt);\r\n            that._areaX2 = x;\r\n            that._areaY2 = y;\r\n\r\n            if (that._scrollAvailable && !that._scrollActive && that._scrollSpeed !== null) {\r\n                const scon = that._targetContainer;\r\n\r\n                // Prevent multiple requestAnimationFrame callbacks\r\n                that._scrollActive = true;\r\n\r\n                // Continous scrolling\r\n                requestAnimationFrame(function scroll() {\r\n\r\n                    // Scrolling is not anymore required\r\n                    if (that._scrollSpeed === null) {\r\n                        return (that._scrollActive = false);\r\n                    }\r\n\r\n                    /**\r\n                     * If the value exeeds the scrollable area it will\r\n                     * be set to the max / min value. So change only\r\n                     */\r\n                    const initial = scon.scrollTop;\r\n\r\n                    // Reduce velocity, use ceil to scroll at least 1px per frame\r\n                    scon.scrollTop += Math.ceil(that._scrollSpeed / that.options.scrollSpeedDivider);\r\n                    that._areaY1 -= scon.scrollTop - initial;\r\n\r\n                    /**\r\n                     * We changed the start coordinates ->  redraw the selectiona area\r\n                     * We changed the dimensions of the area element -> re-calc selected elements\r\n                     * The selected elements array has been changed -> fire event\r\n                     */\r\n                    that._redrawArea();\r\n                    that._updatedTouchingElements();\r\n                    that._dispatchEvent('onMove', evt);\r\n\r\n                    // Keep scrolling even if the user stops to move his pointer\r\n                    requestAnimationFrame(scroll);\r\n                });\r\n            } else {\r\n\r\n                /**\r\n                 * Perform redraw only if scrolling is not active.\r\n                 * If scrolling is active this area is getting re-dragwed by the\r\n                 * anonymized scroll function.\r\n                 */\r\n                that._redrawArea();\r\n                that._updatedTouchingElements();\r\n                that._dispatchEvent('onMove', evt);\r\n            }\r\n        },\r\n\r\n        _manualScroll(evt) {\r\n            that._scrollSpeed += that.options.scrollSpeedDivider * (evt.wheelDelta * -1);\r\n            that._onTapMove(evt);\r\n\r\n            // Prevent defaul scrolling behaviour, eg. page scrolling\r\n            evt.preventDefault();\r\n        },\r\n\r\n        _redrawArea() {\r\n            const brect = that._targetBoundary;\r\n            let x = that._areaX2;\r\n            let y = that._areaY2;\r\n\r\n            if (x < brect.left) {\r\n                x = brect.left;\r\n            } else if (x > brect.left + brect.width) {\r\n                x = brect.left + brect.width;\r\n            }\r\n\r\n            if (y < brect.top) {\r\n                that._scrollSpeed = -Math.abs(brect.top - y);\r\n                y = brect.top;\r\n            } else if (y > brect.top + brect.height) {\r\n                that._scrollSpeed = Math.abs(brect.top + brect.height - y);\r\n                y = brect.top + brect.height;\r\n            } else {\r\n                that._scrollSpeed = null;\r\n            }\r\n\r\n            const x3 = min(that._areaX1, x);\r\n            const y3 = min(that._areaY1, y);\r\n            const x4 = max(that._areaX1, x);\r\n            const y4 = max(that._areaY1, y);\r\n\r\n            _.css(that._areaElement, {\r\n                top: y3,\r\n                left: x3,\r\n                width: x4 - x3,\r\n                height: y4 - y3\r\n            });\r\n        },\r\n\r\n        _onTapStop(evt, noevent) {\r\n\r\n            // Remove event handlers\r\n            _.off(doc, ['mousemove', 'touchmove'], that._delayedTapMove);\r\n            _.off(doc, ['touchmove', 'mousemove'], that._onTapMove);\r\n            _.off(doc, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\r\n\r\n            if (that._singleClick && that.options.singleClick) {\r\n                that._onSingleTap(evt);\r\n            } else if (!noevent) {\r\n                that._updatedTouchingElements();\r\n                that._dispatchEvent('onStop', evt);\r\n            }\r\n\r\n            // Reset scroll speed\r\n            that._scrollSpeed = null;\r\n\r\n            // Unbind mouse scrolling listener\r\n            _.off(window, 'wheel', that._manualScroll);\r\n\r\n            // Enable default select event\r\n            _.off(doc, 'selectstart', preventDefault);\r\n            _.css(that._areaElement, 'display', 'none');\r\n        },\r\n\r\n        _updatedTouchingElements() {\r\n            const touched = [];\r\n            const changed = {added: [], removed: []};\r\n\r\n            const mode = that.options.mode;\r\n            const selectables = that._selectables;\r\n            const areaRect = that._areaElement.getBoundingClientRect();\r\n\r\n            // Itreate over the selectable elements\r\n            for (let i = 0, n = selectables.length, node; node = selectables[i], i < n; i++) {\r\n\r\n                // Check if area intersects element\r\n                if (_.intersects(areaRect, node.getBoundingClientRect(), mode)) {\r\n\r\n                    // Fire filter event\r\n                    if (that._dispatchFilterEvent('selectionFilter', node) !== false) {\r\n\r\n                        // Check if the element wasn't present in the last selection.\r\n                        if (!that._touchedElements.includes(node)) {\r\n                            changed.added.push(node);\r\n                        }\r\n\r\n                        touched.push(node);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check which elements where removed since last selection\r\n            for (let i = 0, n = that._touchedElements.length, el; el = that._touchedElements[i], i < n; i++) {\r\n                if (!touched.includes(el)) {\r\n                    changed.removed.push(el);\r\n                }\r\n            }\r\n\r\n            // Save\r\n            that._touchedElements = touched;\r\n            that._changedElements = changed;\r\n        },\r\n\r\n        _dispatchFilterEvent(eventName, element) {\r\n            const event = that.options[eventName];\r\n\r\n            // Validate function\r\n            if (typeof event === 'function') {\r\n                return event.call(that, {selection: that, eventName, element});\r\n            }\r\n        },\r\n\r\n        _dispatchEvent(eventName, originalEvent, additional) {\r\n            const event = that.options[eventName];\r\n\r\n            // Validate function\r\n            if (typeof event === 'function') {\r\n                return event.call(that, {\r\n                    selection: that,\r\n                    areaElement: that._areaElement,\r\n                    selectedElements: that._touchedElements.concat(that._selectedStore),\r\n                    changedElements: that._changedElements,\r\n                    eventName,\r\n                    originalEvent,\r\n                    ...additional\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Saves the current selection for the next selecion.\r\n         * Allows multiple selections.\r\n         */\r\n        keepSelection() {\r\n            for (let i = 0, n = that._touchedElements.length, el; el = that._touchedElements[i], i < n; i++) {\r\n                if (!that._selectedStore.includes(el)) {\r\n                    that._selectedStore.push(el);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear the elements which where saved by 'keepSelection()'.\r\n         */\r\n        clearSelection() {\r\n            that._selectedStore = [];\r\n        },\r\n\r\n        /**\r\n         * Removes an particular element from the selection.\r\n         */\r\n        removeFromSelection(el) {\r\n            _.removeElement(that._selectedStore, el);\r\n            _.removeElement(that._touchedElements, el);\r\n        },\r\n\r\n        /**\r\n         * @returns {Array} Selected elements\r\n         */\r\n        getSelection() {\r\n            return that._selectedStore;\r\n        },\r\n\r\n        /**\r\n         * Cancel the current selection process.\r\n         * @param  {boolean} true to fire the onStop listener after cancel.\r\n         */\r\n        cancel(keepEvent) {\r\n            that._onTapStop(null, !keepEvent);\r\n        },\r\n\r\n        /**\r\n         * Set or get an option.\r\n         * @param   {string} name\r\n         * @param   {*}      value\r\n         * @return  {*}      the new value\r\n         */\r\n        option(name, value) {\r\n            const {options} = that;\r\n            return value == null ? options[name] : (options[name] = value);\r\n        },\r\n\r\n        /**\r\n         * Disable the selection functinality.\r\n         */\r\n        disable() {\r\n            that._bindStartEvents('off');\r\n        },\r\n\r\n        /**\r\n         * Unbinds all events and removes the area-element\r\n         */\r\n        destroy() {\r\n            that.disable();\r\n            doc.body.removeChild(that._clippingElement);\r\n        },\r\n\r\n        /**\r\n         * Disable the selection functinality.\r\n         */\r\n        enable() {\r\n            that._bindStartEvents('on');\r\n        }\r\n    };\r\n\r\n    // Initialize\r\n    that._init();\r\n\r\n    return that;\r\n}\r\n\r\n// Export utils\r\nSelection.utils = {\r\n    on: _.on,\r\n    off: _.off,\r\n    css: _.css,\r\n    intersects: _.intersects,\r\n    selectAll: _.selectAll,\r\n    eventPath: _.eventPath,\r\n    removeElement: _.removeElement\r\n};\r\n\r\n/**\r\n * Create selection instance\r\n * @param {Object} [options]\r\n */\r\nSelection.create = options => new Selection(options);\r\n\r\n// Set version\r\nSelection.version = '0.1.5';\r\n\r\n// Export API\r\nmodule.exports = Selection;\r\n","function eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) events = [events];\r\n\r\n    for (const element of elements) {\r\n        for (const event of events) {\r\n            element[method](event, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nconst unitify = (val, unit = 'px') => typeof val === 'number' ? val + unit : '' + val;\r\n\r\n/**\r\n * Add css to a DOM-Element or returns the current\r\n * value of a property.\r\n *\r\n * @param el The Element.\r\n * @param attr The attribute or a object which holds css key-properties.\r\n * @param val The value for a single attribute.\r\n * @returns {*}\r\n */\r\nexport function css(el, attr, val) {\r\n    const style = el && el.style;\r\n    if (!style) return;\r\n\r\n    if (typeof attr === 'object') {\r\n\r\n        for (const prop in attr) {\r\n            style[prop] = unitify(attr[prop]);\r\n        }\r\n\r\n    } else if (val == null) {\r\n\r\n        const dw = document.defaultView;\r\n        if (dw && dw.getComputedStyle) {\r\n            val = dw.getComputedStyle(el, null);\r\n        } else if (el.currentStyle) {\r\n            val = el.currentStyle;\r\n        }\r\n\r\n        return attr == null ? val : val[attr];\r\n    } else {\r\n        style[attr] = unitify(val);\r\n    }\r\n}\r\n\r\n/**\r\n * Check if two DOM-Elements intersects each other.\r\n * @param a BoundingClientRect of the first element.\r\n * @param b BoundingClientRect of the second element.\r\n * @param mode Options are center, cover or touch.\r\n * @returns {boolean} If both elements intersects each other.\r\n */\r\nexport function intersects(a, b, mode = 'touch') {\r\n\r\n    if (mode === 'center') {\r\n        const bxc = b.left + b.width / 2;\r\n        const byc = b.top + b.height / 2;\r\n\r\n        return bxc >= a.left\r\n            && bxc <= a.right\r\n            && byc >= a.top\r\n            && byc <= a.bottom;\r\n    } else if (mode === 'cover') {\r\n        return b.left >= a.left\r\n            && b.top >= a.top\r\n            && b.right <= a.right\r\n            && b.bottom <= a.bottom;\r\n    } else if (mode === 'touch') {\r\n        return a.right >= b.left\r\n            && a.left <= b.right\r\n            && a.bottom >= b.top\r\n            && a.top <= b.bottom;\r\n    }\r\n}\r\n\r\n/**\r\n * Takes a selector (or array of selectors) and returns the matched nodes.\r\n * @param selector The selector or an Array of selectors.\r\n * @returns {Array} Array of DOM-Nodes.\r\n */\r\nexport function selectAll(selector) {\r\n    if (!Array.isArray(selector)) selector = [selector];\r\n\r\n    const nodes = [];\r\n    for (const sel of selector) {\r\n        nodes.push(...document.querySelectorAll(sel));\r\n    }\r\n\r\n    return nodes;\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Removes an element from an Array.\r\n */\r\nexport function removeElement(arr, el) {\r\n    const index = arr.indexOf(el);\r\n    if (~index) arr.splice(index, 1);\r\n}\r\n\r\nexport function simplifyEvent(evt) {\r\n    const tap = (evt.touches && evt.touches[0] || evt);\r\n    return {\r\n        tap,\r\n        x: tap.clientX,\r\n        y: tap.clientY,\r\n        target: tap.target\r\n    };\r\n}"],"sourceRoot":""}