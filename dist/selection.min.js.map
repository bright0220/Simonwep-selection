{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/selection.js","webpack:///./src/utils.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","abs","Math","max","min","doc","document","preventDefault","e","Selection","options","arguments","length","undefined","that","assign","class","startThreshold","singleClick","disableTouch","validateStart","containers","selectables","startareas","boundaries","_selectedStore","_areaElement","createElement","_init","body","appendChild","_","css","top","left","position","enable","_bindStartEvents","type","_onTapStart","passive","evt","_$simplifyEvent","simplifyEvent","x","y","target","startAreas","selectAll","_boundaries","evtpath","eventPath","find","el","includes","_lastX","_lastY","_singleClick","_selectables","forEach","con","push","querySelectorAll","_targetBoundary","intersects","getBoundingClientRect","_touchedElements","_changedElements","added","removed","classList","add","on","_delayedTapMove","_onTapStop","_onSingleTap","_$simplifyEvent2","parentElement","_dispatchEvent","_$simplifyEvent3","off","_onTapMove","_updateArea","_updatedTouchingElements","brect","_$simplifyEvent4","width","height","x3","y3","x4","y4","noevent","touched","changed","node","_dispatchFilterEvent","eventName","element","event","selection","originalEvent","additional","_objectSpread","areaElement","selectedElements","concat","changedElements","keepSelection","clearSelection","removeFromSelection","removeElement","getSelection","cancel","keepEvent","option","disable","destroy","removeChild","utils","version","eventListener","method","elements","events","fn","HTMLCollection","NodeList","Array","from","isArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","capture","err","return","slice","attr","val","style","prop","unitify","dw","defaultView","getComputedStyle","currentStyle","ela","elb","a","b","bxc","byc","right","bottom","selector","nodes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","sel","path","composedPath","arr","index","indexOf","splice","tap","touches","clientX","clientY","unit"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,UAAAD,IAEAD,EAAA,UAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,QAIAhC,IAAAiC,EAAA,2gBCvEOC,EAAiBC,KAAjBD,IAAKE,EAAYD,KAAZC,IAAKC,EAAOF,KAAPE,IACXC,EAAMC,SACNC,EAAiBC,GAAKA,EAAED,iBAE9B,SAASE,IAAwB,IAAdC,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAEvBG,GAEFJ,QAAS/B,OAAOoC,QACZC,MAAO,iBAEP5B,KAAM,QACN6B,eAAgB,GAChBC,aAAa,EACbC,cAAc,EAEdC,cAAe,KAAM,EAErBC,cACAC,eAEAC,YAAa,QACbC,YAAa,SACdd,GAGHe,kBAGAC,aAAcrB,EAAIsB,cAAc,OAEhCC,QAGIvB,EAAIwB,KAAKC,YAAYhB,EAAKY,cAG1BK,EAAEC,IAAIlB,EAAKY,cACPO,IAAK,EACLC,KAAM,EACNC,SAAU,UAGdrB,EAAKsB,UAGTC,iBAAiBC,GACbP,EAAEO,GAAMjC,EAAK,YAAaS,EAAKyB,aAE1BzB,EAAKJ,QAAQS,cACdY,EAAEO,GAAMjC,EAAK,aAAcS,EAAKyB,aAC5BC,SAAS,KAKrBD,YAAYE,GAAK,IAAAC,EACUX,EAAEY,cAAcF,GAAhCG,EADMF,EACNE,EAAGC,EADGH,EACHG,EAAGC,EADAJ,EACAI,OAGb,GAAKhC,EAAKJ,QAAQU,cAAcqB,GAAhC,CAKA,IAAMM,EAAahB,EAAEiB,UAAUlC,EAAKJ,QAAQa,YAC5CT,EAAKmC,YAAclB,EAAEiB,UAAUlC,EAAKJ,QAAQc,YAG5C,IAAM0B,EAAUnB,EAAEoB,UAAUV,GAC5B,GAAKM,EAAWK,KAAKC,GAAMH,EAAQI,SAASD,KACvCvC,EAAKmC,YAAYG,KAAKC,GAAMH,EAAQI,SAASD,IADlD,CAMAvC,EAAKyC,OAASX,EACd9B,EAAK0C,OAASX,EACd/B,EAAK2C,cAAe,EAGpB,IAAMpC,EAAaU,EAAEiB,UAAUlC,EAAKJ,QAAQW,YAC5CP,EAAK4C,aAAe3B,EAAEiB,UAAUlC,EAAKJ,QAAQY,aAC7CD,EAAWsC,QAAQC,GAAO9C,EAAK4C,aAAaG,QAAQD,EAAIE,iBAAiB,OAGzEhD,EAAKiD,gBAAkBjD,EAAKmC,YAAYG,KAAKC,GAAMtB,EAAEiC,WAAWX,EAAIP,IAASmB,wBAC7EnD,EAAKoD,oBACLpD,EAAKqD,kBACDC,SACAC,YAIJvD,EAAKY,aAAa4C,UAAUC,IAAIzD,EAAKJ,QAAQM,OAG7Ce,EAAEyC,GAAGnE,EAAK,cAAeE,GAGzBwB,EAAEyC,GAAGnE,EAAK,YAAaS,EAAK2D,iBAC5B1C,EAAEyC,GAAGnE,EAAK,YAAaS,EAAK2D,iBACxBjC,SAAS,IAGbT,EAAEyC,GAAGnE,GAAM,UAAW,cAAe,YAAaS,EAAK4D,YACvDjC,EAAIlC,oBAGRoE,aAAalC,GAIT,IAJc,IAAAmC,EACC7C,EAAEY,cAAcF,GAA1BK,EADS8B,EACT9B,QAGGhC,EAAK4C,aAAaJ,SAASR,IAAS,CACxC,IAAIA,EAAO+B,cAGP,OAFA/B,EAASA,EAAO+B,cAMxB/D,EAAKoD,iBAAiBL,KAAKf,GAC3BhC,EAAKgE,eAAe,WAAYrC,GAC5BK,YAIR2B,gBAAgBhC,GAAK,IAAAsC,EACFhD,EAAEY,cAAcF,GAAxBG,EADUmC,EACVnC,EAAGC,EADOkC,EACPlC,EAGN5C,EAAK2C,EAAIC,GAAM/B,EAAKyC,OAASzC,EAAK0C,UAAY1C,EAAKJ,QAAQO,iBAE3Dc,EAAEiD,IAAI3E,GAAM,YAAa,aAAcS,EAAK2D,iBAC5C1C,EAAEyC,GAAGnE,GAAM,YAAa,aAAcS,EAAKmE,YAC3ClD,EAAEC,IAAIlB,EAAKY,aAAc,UAAW,SAGpCZ,EAAKoE,YAAYzC,GAGjB3B,EAAKgE,eAAe,UAAWrC,GAI/B3B,EAAK2C,cAAe,IAI5BwB,WAAWxC,GACP3B,EAAKoE,YAAYzC,GACjB3B,EAAKqE,2BACLrE,EAAKgE,eAAe,SAAUrC,IAGlCyC,YAAYzC,GACR,IAAM2C,EAAQtE,EAAKiD,gBADNsB,EAEAtD,EAAEY,cAAcF,GAAxBG,EAFQyC,EAERzC,EAAGC,EAFKwC,EAELxC,EAEJD,EAAIwC,EAAMlD,OAAMU,EAAIwC,EAAMlD,MAC1BW,EAAIuC,EAAMnD,MAAKY,EAAIuC,EAAMnD,KACzBW,EAAIwC,EAAMlD,KAAOkD,EAAME,QAAO1C,EAAIwC,EAAMlD,KAAOkD,EAAME,OACrDzC,EAAIuC,EAAMnD,IAAMmD,EAAMG,SAAQ1C,EAAIuC,EAAMnD,IAAMmD,EAAMG,QAExD,IAAMC,EAAKpF,EAAIU,EAAKyC,OAAQX,GACtB6C,EAAKrF,EAAIU,EAAK0C,OAAQX,GACtB6C,EAAKvF,EAAIW,EAAKyC,OAAQX,GACtB+C,EAAKxF,EAAIW,EAAK0C,OAAQX,GAE5Bd,EAAEC,IAAIlB,EAAKY,cACPO,IAAKwD,EACLvD,KAAMsD,EACNF,MAAOI,EAAKF,EACZD,OAAQI,EAAKF,KAIrBf,WAAWjC,EAAKmD,GAGZ7D,EAAEiD,IAAI3E,GAAM,YAAa,aAAcS,EAAK2D,iBAC5C1C,EAAEiD,IAAI3E,GAAM,YAAa,aAAcS,EAAKmE,YAC5ClD,EAAEiD,IAAI3E,GAAM,UAAW,cAAe,YAAaS,EAAK4D,YAEpD5D,EAAK2C,cAAgB3C,EAAKJ,QAAQQ,YAClCJ,EAAK6D,aAAalC,GACVmD,IACR9E,EAAKqE,2BACLrE,EAAKgE,eAAe,SAAUrC,IAIlCV,EAAEiD,IAAI3E,EAAK,cAAeE,GAC1BwB,EAAEC,IAAIlB,EAAKY,aAAc,UAAW,SAGxCyD,2BAKI,IAJA,IAAMU,KACAC,GAAW1B,SAAWC,YAGnBpG,EAAI,EAAGyB,EAAIoB,EAAK4C,aAAa9C,OAAQ3C,EAAIyB,EAAGzB,IAAK,CACtD,IAAM8H,EAAOjF,EAAK4C,aAAazF,GAG3B8D,EAAEiC,WAAWlD,EAAKY,aAAcqE,EAAMjF,EAAKJ,QAAQtB,QAGQ,IAAvD0B,EAAKkF,qBAAqB,kBAAmBD,KAGxCjF,EAAKoD,iBAAiBZ,SAASyC,IAChCD,EAAQ1B,MAAMP,KAAKkC,GAGvBF,EAAQhC,KAAKkC,IAMzB,IAAK,IAA6C1C,EAAzCpF,EAAI,EAAGyB,EAAIoB,EAAKoD,iBAAiBtD,OAAYyC,EAAKvC,EAAKoD,iBAAiBjG,GAAIA,EAAIyB,EAAGzB,IACnF4H,EAAQvC,SAASD,IAClByC,EAAQzB,QAAQR,KAAKR,GAK7BvC,EAAKoD,iBAAmB2B,EACxB/E,EAAKqD,iBAAmB2B,GAG5BE,qBAAqBC,EAAWC,GAC5B,IAAMC,EAAQrF,EAAKJ,QAAQuF,GAG3B,GAAqB,mBAAVE,EACP,OAAOA,EAAM/H,KAAK0C,GAAOsF,UAAWtF,EAAMmF,YAAWC,aAI7DpB,eAAemB,EAAWI,EAAeC,GACrC,IAAMH,EAAQrF,EAAKJ,QAAQuF,GAG3B,GAAqB,mBAAVE,EACP,OAAOA,EAAM/H,KAAK0C,oUAAXyF,EACHH,UAAWtF,EACX0F,YAAa1F,EAAKY,aAClB+E,iBAAkB3F,EAAKoD,iBAAiBwC,OAAO5F,EAAKW,gBACpDkF,gBAAiB7F,EAAKqD,iBACtB8B,YACAI,iBACGC,KASfM,gBACI,IAAK,IAA6CvD,EAAzCpF,EAAI,EAAGyB,EAAIoB,EAAKoD,iBAAiBtD,OAAYyC,EAAKvC,EAAKoD,iBAAiBjG,GAAIA,EAAIyB,EAAGzB,IACnF6C,EAAKW,eAAe6B,SAASD,IAC9BvC,EAAKW,eAAeoC,KAAKR,IAQrCwD,iBACI/F,EAAKW,mBAMTqF,oBAAoBzD,GAChBtB,EAAEgF,cAAcjG,EAAKW,eAAgB4B,GACrCtB,EAAEgF,cAAcjG,EAAKoD,iBAAkBb,IAM3C2D,aAAY,IACDlG,EAAKW,eAOhBwF,OAAOC,GACHpG,EAAK4D,WAAW,MAAOwC,IAS3BC,OAAO3I,EAAMU,GAAO,IACTwB,EAAWI,EAAXJ,QACP,OAAgB,MAATxB,EAAgBwB,EAAQlC,GAASkC,EAAQlC,GAAQU,GAM5DkI,UACItG,EAAKuB,iBAAiB,QAM1BgF,UACIvG,EAAKsG,UACL/G,EAAIwB,KAAKyF,YAAYxG,EAAKY,eAM9BU,SACItB,EAAKuB,iBAAiB,QAO9B,OAFAvB,EAAKc,QAEEd,EAIXL,EAAU8G,OACN/C,GAAIzC,EAAEyC,GACNQ,IAAKjD,EAAEiD,IACPhD,IAAKD,EAAEC,IACPgC,WAAYjC,EAAEiC,WACdhB,UAAWjB,EAAEiB,UACbG,UAAWpB,EAAEoB,UACb4D,cAAehF,EAAEgF,eAOrBtG,EAAUlB,OAASmB,IAAW,IAAID,EAAUC,IAG5CD,EAAU+G,QAAU,QAGpB9J,EAAOD,QAAUgD,0jBCpXjB,SAASgH,EAAcC,EAAQC,EAAUC,EAAQC,GAAkB,IAAdnH,EAAcC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAG3DgH,aAAoBG,gBAAkBH,aAAoBI,SAC1DJ,EAAWK,MAAMC,KAAKN,GACdK,MAAME,QAAQP,KACtBA,GAAYA,IAGXK,MAAME,QAAQN,KAASA,GAAUA,IATyB,IAAAO,GAAA,EAAAC,GAAA,EAAAC,OAAAxH,EAAA,IAW/D,QAAAyH,EAAAC,EAAsBZ,EAAtB3I,OAAAwJ,cAAAL,GAAAG,EAAAC,EAAAE,QAAAC,MAAAP,GAAA,EAAgC,KAArBjC,EAAqBoC,EAAApJ,MAAAyJ,GAAA,EAAAC,GAAA,EAAAC,OAAAhI,EAAA,IAC5B,QAAAiI,EAAAC,EAAoBnB,EAApB5I,OAAAwJ,cAAAG,GAAAG,EAAAC,EAAAN,QAAAC,MAAAC,GAAA,EAA4B,KAAjBxC,EAAiB2C,EAAA5J,MACxBgH,EAAQwB,GAAQvB,EAAO0B,EAAvBtB,GAA4ByC,SAAS,GAAUtI,KAFvB,MAAAuI,GAAAL,GAAA,EAAAC,EAAAI,EAAA,YAAAN,GAAA,MAAAI,EAAAG,QAAAH,EAAAG,SAAA,WAAAN,EAAA,MAAAC,KAX+B,MAAAI,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAI,EAAAW,QAAAX,EAAAW,SAAA,WAAAd,EAAA,MAAAC,GAiB/D,OAAOL,MAAMnI,UAAUsJ,MAAM/K,KAAKuC,UAAW,0DAkC1C,SAAa0C,EAAI+F,EAAMC,GAC1B,IAAMC,EAAQjG,GAAMA,EAAGiG,MACvB,GAAKA,EAEL,GAAoB,iBAATF,EAEP,IAAK,IAAMG,KAAQH,EACfE,EAAMC,GAAQC,EAAQJ,EAAKG,QAG5B,IAAW,MAAPF,EAAa,CAEpB,IAAMI,EAAKnJ,SAASoJ,YAOpB,OANID,GAAMA,EAAGE,iBACTN,EAAMI,EAAGE,iBAAiBtG,EAAI,MACvBA,EAAGuG,eACVP,EAAMhG,EAAGuG,cAGE,MAARR,EAAeC,EAAMA,EAAID,GAEhCE,EAAMF,GAAQI,EAAQH,kBAWvB,SAAoBQ,EAAKC,GAAqB,IAAhB1K,EAAgBuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QAClCoJ,EAAIF,EAAI5F,wBACR+F,EAAIF,EAAI7F,wBAEd,GAAa,WAAT7E,EAAmB,CACnB,IAAM6K,EAAMD,EAAE9H,KAAO8H,EAAE1E,MAAQ,EACzB4E,EAAMF,EAAE/H,IAAM+H,EAAEzE,OAAS,EAE/B,OAAO0E,GAAOF,EAAE7H,MACT+H,GAAOF,EAAEI,OACTD,GAAOH,EAAE9H,KACTiI,GAAOH,EAAEK,OACb,MAAa,UAAThL,EACA4K,EAAE9H,MAAQ6H,EAAE7H,MACZ8H,EAAE/H,KAAO8H,EAAE9H,KACX+H,EAAEG,OAASJ,EAAEI,OACbH,EAAEI,QAAUL,EAAEK,OACL,UAAThL,EACA2K,EAAEI,OAASH,EAAE9H,MACb6H,EAAE7H,MAAQ8H,EAAEG,OACZJ,EAAEK,QAAUJ,EAAE/H,KACd8H,EAAE9H,KAAO+H,EAAEI,YAJf,eAaJ,SAAmBC,GACjBrC,MAAME,QAAQmC,KAAWA,GAAYA,IAE1C,IAAMC,KAH0BC,GAAA,EAAAC,GAAA,EAAAC,OAAA5J,EAAA,IAIhC,QAAA6J,EAAAC,EAAkBN,EAAlBrL,OAAAwJ,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EAA4B,KAAjBK,EAAiBF,EAAAxL,MACxBoL,EAAMzG,QAAQvD,SAASwD,iBAAiB8G,KALZ,MAAA3B,GAAAuB,GAAA,EAAAC,EAAAxB,EAAA,YAAAsB,GAAA,MAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,MAAAC,GAQhC,OAAOH,eAQJ,SAAmB7H,GACtB,IAAIoI,EAAOpI,EAAIoI,MAASpI,EAAIqI,cAAgBrI,EAAIqI,eAChD,GAAID,EAAM,OAAOA,EAEjB,IAAIxH,EAAKZ,EAAIK,OAAO+B,cAEpB,IADAgG,GAAQpI,EAAIK,OAAQO,GACbA,EAAKA,EAAGwB,eAAegG,EAAKhH,KAAKR,GAGxC,OADAwH,EAAKhH,KAAKvD,SAAUzC,QACbgN,mBAMJ,SAAuBE,EAAK1H,GAC/B,IAAM2H,EAAQD,EAAIE,QAAQ5H,IACrB2H,GAAOD,EAAIG,OAAOF,EAAO,oBAG3B,SAAuBvI,GAC1B,IAAM0I,EAAO1I,EAAI2I,SAAW3I,EAAI2I,QAAQ,IAAM3I,EAC9C,OACI0I,MACAvI,EAAGuI,EAAIE,QACPxI,EAAGsI,EAAIG,QACPxI,OAAQqI,EAAIrI,2BA/Hb,IAAM0B,EAAKiD,EAAchI,KAAK,KAAM,2BAUpC,IAAMuF,EAAMyC,EAAchI,KAAK,KAAM,+BAE5C,IAAM+J,EAAU,SAACH,GAAD,IAAMkC,EAAN5K,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAa,KAAb,MAAqC,iBAAR0I,EAAmBA,EAAMkC,EAAO,GAAKlC","file":"selection.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selection\"] = factory();\n\telse\n\t\troot[\"Selection\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\r\n * Selection, library to realize visual DOM-Selection like on your Desktop.\r\n *\r\n * @author  Simon Reinisch\r\n * @license MIT\r\n */\r\n\r\n// Import utils\r\nimport * as _ from './utils';\r\n\r\n// Some var shorting for better compression and readability\r\nconst {abs, max, min} = Math;\r\nconst doc = document;\r\nconst preventDefault = e => e.preventDefault();\r\n\r\nfunction Selection(options = {}) {\r\n\r\n    const that = {\r\n\r\n        options: Object.assign({\r\n            class: 'selection-area',\r\n\r\n            mode: 'touch',\r\n            startThreshold: 10,\r\n            singleClick: true,\r\n            disableTouch: false,\r\n\r\n            validateStart: () => true,\r\n\r\n            containers: [],\r\n            selectables: [],\r\n\r\n            startareas: ['html'],\r\n            boundaries: ['html']\r\n        }, options),\r\n\r\n        // Store for keepSelection\r\n        _selectedStore: [],\r\n\r\n        // Create area element\r\n        _areaElement: doc.createElement('div'),\r\n\r\n        _init() {\r\n\r\n            // Append area to body\r\n            doc.body.appendChild(that._areaElement);\r\n\r\n            // Apply basic styles to the area element\r\n            _.css(that._areaElement, {\r\n                top: 0,\r\n                left: 0,\r\n                position: 'fixed'\r\n            });\r\n\r\n            that.enable();\r\n        },\r\n\r\n        _bindStartEvents(type) {\r\n            _[type](doc, 'mousedown', that._onTapStart);\r\n\r\n            if (!that.options.disableTouch) {\r\n                _[type](doc, 'touchstart', that._onTapStart, {\r\n                    passive: false\r\n                });\r\n            }\r\n        },\r\n\r\n        _onTapStart(evt) {\r\n            const {x, y, target} = _.simplifyEvent(evt);\r\n\r\n            // Check mouse middleware\r\n            if (!that.options.validateStart(evt)) {\r\n                return;\r\n            }\r\n\r\n            // Find start-areas and boundaries\r\n            const startAreas = _.selectAll(that.options.startareas);\r\n            that._boundaries = _.selectAll(that.options.boundaries);\r\n\r\n            // Check if area starts in one of the start areas / boundaries\r\n            const evtpath = _.eventPath(evt);\r\n            if (!startAreas.find(el => evtpath.includes(el)) ||\r\n                !that._boundaries.find(el => evtpath.includes(el))) {\r\n                return;\r\n            }\r\n\r\n            // Save start coordinates\r\n            that._lastX = x;\r\n            that._lastY = y;\r\n            that._singleClick = true; // To detect single-click\r\n\r\n            // Resolve selectors\r\n            const containers = _.selectAll(that.options.containers);\r\n            that._selectables = _.selectAll(that.options.selectables);\r\n            containers.forEach(con => that._selectables.push(...con.querySelectorAll('*')));\r\n\r\n            // Save current boundary\r\n            that._targetBoundary = that._boundaries.find(el => _.intersects(el, target)).getBoundingClientRect();\r\n            that._touchedElements = [];\r\n            that._changedElements = {\r\n                added: [],\r\n                removed: []\r\n            };\r\n\r\n            // Add class to the area element\r\n            that._areaElement.classList.add(that.options.class);\r\n\r\n            // Prevent default select event\r\n            _.on(doc, 'selectstart', preventDefault);\r\n\r\n            // Add listener\r\n            _.on(doc, 'mousemove', that._delayedTapMove);\r\n            _.on(doc, 'touchmove', that._delayedTapMove, {\r\n                passive: false\r\n            });\r\n\r\n            _.on(doc, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\r\n            evt.preventDefault();\r\n        },\r\n\r\n        _onSingleTap(evt) {\r\n            let {target} = _.simplifyEvent(evt);\r\n\r\n            // Traferse dom upwards to check if target is selectable\r\n            while (!that._selectables.includes(target)) {\r\n                if (target.parentElement) {\r\n                    target = target.parentElement;\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            that._touchedElements.push(target);\r\n            that._dispatchEvent('onSelect', evt, {\r\n                target\r\n            });\r\n        },\r\n\r\n        _delayedTapMove(evt) {\r\n            const {x, y} = _.simplifyEvent(evt);\r\n\r\n            // Check pixel threshold\r\n            if (abs((x + y) - (that._lastX + that._lastY)) >= that.options.startThreshold) {\r\n\r\n                _.off(doc, ['mousemove', 'touchmove'], that._delayedTapMove);\r\n                _.on(doc, ['mousemove', 'touchmove'], that._onTapMove);\r\n                _.css(that._areaElement, 'display', 'block');\r\n\r\n                // New start position\r\n                that._updateArea(evt);\r\n\r\n                // Fire event\r\n                that._dispatchEvent('onStart', evt);\r\n\r\n                // An action is recognized as single-select until\r\n                // the user performed a mutli-selection\r\n                that._singleClick = false;\r\n            }\r\n        },\r\n\r\n        _onTapMove(evt) {\r\n            that._updateArea(evt);\r\n            that._updatedTouchingElements();\r\n            that._dispatchEvent('onMove', evt);\r\n        },\r\n\r\n        _updateArea(evt) {\r\n            const brect = that._targetBoundary;\r\n            let {x, y} = _.simplifyEvent(evt);\r\n\r\n            if (x < brect.left) x = brect.left;\r\n            if (y < brect.top) y = brect.top;\r\n            if (x > brect.left + brect.width) x = brect.left + brect.width;\r\n            if (y > brect.top + brect.height) y = brect.top + brect.height;\r\n\r\n            const x3 = min(that._lastX, x);\r\n            const y3 = min(that._lastY, y);\r\n            const x4 = max(that._lastX, x);\r\n            const y4 = max(that._lastY, y);\r\n\r\n            _.css(that._areaElement, {\r\n                top: y3,\r\n                left: x3,\r\n                width: x4 - x3,\r\n                height: y4 - y3\r\n            });\r\n        },\r\n\r\n        _onTapStop(evt, noevent) {\r\n\r\n            // Remove event handlers\r\n            _.off(doc, ['mousemove', 'touchmove'], that._delayedTapMove);\r\n            _.off(doc, ['touchmove', 'mousemove'], that._onTapMove);\r\n            _.off(doc, ['mouseup', 'touchcancel', 'touchend'], that._onTapStop);\r\n\r\n            if (that._singleClick && that.options.singleClick) {\r\n                that._onSingleTap(evt);\r\n            } else if (!noevent) {\r\n                that._updatedTouchingElements();\r\n                that._dispatchEvent('onStop', evt);\r\n            }\r\n\r\n            // Enable default select event\r\n            _.off(doc, 'selectstart', preventDefault);\r\n            _.css(that._areaElement, 'display', 'none');\r\n        },\r\n\r\n        _updatedTouchingElements() {\r\n            const touched = [];\r\n            const changed = {added: [], removed: []};\r\n\r\n            // Itreate over the selectable elements\r\n            for (let i = 0, n = that._selectables.length; i < n; i++) {\r\n                const node = that._selectables[i];\r\n\r\n                // Check if area intersects element\r\n                if (_.intersects(that._areaElement, node, that.options.mode)) {\r\n\r\n                    // Fire filter event\r\n                    if (that._dispatchFilterEvent('selectionFilter', node) !== false) {\r\n\r\n                        // Check if the element wasn't present in the last selection.\r\n                        if (!that._touchedElements.includes(node)) {\r\n                            changed.added.push(node);\r\n                        }\r\n\r\n                        touched.push(node);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Check which elements where removed since last selection\r\n            for (let i = 0, n = that._touchedElements.length, el; el = that._touchedElements[i], i < n; i++) {\r\n                if (!touched.includes(el)) {\r\n                    changed.removed.push(el);\r\n                }\r\n            }\r\n\r\n            // Save\r\n            that._touchedElements = touched;\r\n            that._changedElements = changed;\r\n        },\r\n\r\n        _dispatchFilterEvent(eventName, element) {\r\n            const event = that.options[eventName];\r\n\r\n            // Validate function\r\n            if (typeof event === 'function') {\r\n                return event.call(that, {selection: that, eventName, element});\r\n            }\r\n        },\r\n\r\n        _dispatchEvent(eventName, originalEvent, additional) {\r\n            const event = that.options[eventName];\r\n\r\n            // Validate function\r\n            if (typeof event === 'function') {\r\n                return event.call(that, {\r\n                    selection: that,\r\n                    areaElement: that._areaElement,\r\n                    selectedElements: that._touchedElements.concat(that._selectedStore),\r\n                    changedElements: that._changedElements,\r\n                    eventName,\r\n                    originalEvent,\r\n                    ...additional\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Saves the current selection for the next selecion.\r\n         * Allows multiple selections.\r\n         */\r\n        keepSelection() {\r\n            for (let i = 0, n = that._touchedElements.length, el; el = that._touchedElements[i], i < n; i++) {\r\n                if (!that._selectedStore.includes(el)) {\r\n                    that._selectedStore.push(el);\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear the elements which where saved by 'keepSelection()'.\r\n         */\r\n        clearSelection() {\r\n            that._selectedStore = [];\r\n        },\r\n\r\n        /**\r\n         * Removes an particular element from the selection.\r\n         */\r\n        removeFromSelection(el) {\r\n            _.removeElement(that._selectedStore, el);\r\n            _.removeElement(that._touchedElements, el);\r\n        },\r\n\r\n        /**\r\n         * @returns {Array} Selected elements\r\n         */\r\n        getSelection() {\r\n            return that._selectedStore;\r\n        },\r\n\r\n        /**\r\n         * Cancel the current selection process.\r\n         * @param  {boolean} true to fire the onStop listener after cancel.\r\n         */\r\n        cancel(keepEvent) {\r\n            that._onTapStop(null, !keepEvent);\r\n        },\r\n\r\n        /**\r\n         * Set or get an option.\r\n         * @param   {string} name\r\n         * @param   {*}      value\r\n         * @return  {*}      the new value\r\n         */\r\n        option(name, value) {\r\n            const {options} = that;\r\n            return value == null ? options[name] : (options[name] = value);\r\n        },\r\n\r\n        /**\r\n         * Disable the selection functinality.\r\n         */\r\n        disable() {\r\n            that._bindStartEvents('off');\r\n        },\r\n\r\n        /**\r\n         * Unbinds all events and removes the area-element\r\n         */\r\n        destroy() {\r\n            that.disable();\r\n            doc.body.removeChild(that._areaElement);\r\n        },\r\n\r\n        /**\r\n         * Disable the selection functinality.\r\n         */\r\n        enable() {\r\n            that._bindStartEvents('on');\r\n        }\r\n    };\r\n\r\n    // Initialize\r\n    that._init();\r\n\r\n    return that;\r\n}\r\n\r\n// Export utils\r\nSelection.utils = {\r\n    on: _.on,\r\n    off: _.off,\r\n    css: _.css,\r\n    intersects: _.intersects,\r\n    selectAll: _.selectAll,\r\n    eventPath: _.eventPath,\r\n    removeElement: _.removeElement\r\n};\r\n\r\n/**\r\n * Create selection instance\r\n * @param {Object} [options]\r\n */\r\nSelection.create = options => new Selection(options);\r\n\r\n// Set version\r\nSelection.version = '0.1.4';\r\n\r\n// Export API\r\nmodule.exports = Selection;\r\n","function eventListener(method, elements, events, fn, options = {}) {\r\n\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements = Array.from(elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) events = [events];\r\n\r\n    for (const element of elements) {\r\n        for (const event of events) {\r\n            element[method](event, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nconst unitify = (val, unit = 'px') => typeof val === 'number' ? val + unit : '' + val;\r\n\r\n/**\r\n * Add css to a DOM-Element or returns the current\r\n * value of a property.\r\n *\r\n * @param el The Element.\r\n * @param attr The attribute or a object which holds css key-properties.\r\n * @param val The value for a single attribute.\r\n * @returns {*}\r\n */\r\nexport function css(el, attr, val) {\r\n    const style = el && el.style;\r\n    if (!style) return;\r\n\r\n    if (typeof attr === 'object') {\r\n\r\n        for (const prop in attr) {\r\n            style[prop] = unitify(attr[prop]);\r\n        }\r\n\r\n    } else if (val == null) {\r\n\r\n        const dw = document.defaultView;\r\n        if (dw && dw.getComputedStyle) {\r\n            val = dw.getComputedStyle(el, null);\r\n        } else if (el.currentStyle) {\r\n            val = el.currentStyle;\r\n        }\r\n\r\n        return attr == null ? val : val[attr];\r\n    } else {\r\n        style[attr] = unitify(val);\r\n    }\r\n}\r\n\r\n/**\r\n * Check if two DOM-Elements intersects each other.\r\n * @param ela First DOM-Element.\r\n * @param elb Second DOM-Element.\r\n * @param mode Options are center, cover or touch.\r\n * @returns {boolean} If both elements intersects each other.\r\n */\r\nexport function intersects(ela, elb, mode = 'touch') {\r\n    const a = ela.getBoundingClientRect();\r\n    const b = elb.getBoundingClientRect();\r\n\r\n    if (mode === 'center') {\r\n        const bxc = b.left + b.width / 2;\r\n        const byc = b.top + b.height / 2;\r\n\r\n        return bxc >= a.left\r\n            && bxc <= a.right\r\n            && byc >= a.top\r\n            && byc <= a.bottom;\r\n    } else if (mode === 'cover') {\r\n        return b.left >= a.left\r\n            && b.top >= a.top\r\n            && b.right <= a.right\r\n            && b.bottom <= a.bottom;\r\n    } else if (mode === 'touch') {\r\n        return a.right >= b.left\r\n            && a.left <= b.right\r\n            && a.bottom >= b.top\r\n            && a.top <= b.bottom;\r\n    }\r\n}\r\n\r\n/**\r\n * Takes a selector (or array of selectors) and returns the matched nodes.\r\n * @param selector The selector or an Array of selectors.\r\n * @returns {Array} Array of DOM-Nodes.\r\n */\r\nexport function selectAll(selector) {\r\n    if (!Array.isArray(selector)) selector = [selector];\r\n\r\n    const nodes = [];\r\n    for (const sel of selector) {\r\n        nodes.push(...document.querySelectorAll(sel));\r\n    }\r\n\r\n    return nodes;\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt) {\r\n    let path = evt.path || (evt.composedPath && evt.composedPath());\r\n    if (path) return path;\r\n\r\n    let el = evt.target.parentElement;\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Removes an element from an Array.\r\n */\r\nexport function removeElement(arr, el) {\r\n    const index = arr.indexOf(el);\r\n    if (~index) arr.splice(index, 1);\r\n}\r\n\r\nexport function simplifyEvent(evt) {\r\n    const tap = (evt.touches && evt.touches[0] || evt);\r\n    return {\r\n        tap,\r\n        x: tap.clientX,\r\n        y: tap.clientY,\r\n        target: tap.target\r\n    };\r\n}"],"sourceRoot":""}